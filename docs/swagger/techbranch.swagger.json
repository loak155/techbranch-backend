{
  "swagger": "2.0",
  "info": {
    "title": "Techbranch API",
    "version": "1.0",
    "contact": {
      "name": "Techbranch",
      "url": "https://github.com/loak155/techbranch-backend"
    }
  },
  "tags": [
    {
      "name": "ArticleService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/articles": {
      "get": {
        "summary": "Get articles",
        "description": "Use this API to get articles",
        "operationId": "ArticleService_ListArticles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListArticlesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ArticleService"
        ]
      },
      "post": {
        "summary": "Create new article",
        "description": "Use this API to create new article",
        "operationId": "ArticleService_CreateArticle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreateArticleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateArticleRequest"
            }
          }
        ],
        "tags": [
          "ArticleService"
        ]
      },
      "put": {
        "summary": "Update article",
        "description": "Use this API to update article",
        "operationId": "ArticleService_UpdateArticle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUpdateArticleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUpdateArticleRequest"
            }
          }
        ],
        "tags": [
          "ArticleService"
        ]
      }
    },
    "/api/v1/articles/{id}": {
      "get": {
        "summary": "Get article",
        "description": "Use this API to get article",
        "operationId": "ArticleService_GetArticle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetArticleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ArticleService"
        ]
      },
      "delete": {
        "summary": "Delete article",
        "description": "Use this API to delete article",
        "operationId": "ArticleService_DeleteArticle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteArticleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ArticleService"
        ]
      }
    }
  },
  "definitions": {
    "protoArticle": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protoCreateArticleRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "protoCreateArticleResponse": {
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/protoArticle"
        }
      }
    },
    "protoDeleteArticleResponse": {
      "type": "object"
    },
    "protoGetArticleResponse": {
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/protoArticle"
        }
      }
    },
    "protoListArticlesResponse": {
      "type": "object",
      "properties": {
        "articles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoArticle"
          }
        }
      }
    },
    "protoUpdateArticleRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "protoUpdateArticleResponse": {
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/protoArticle"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
