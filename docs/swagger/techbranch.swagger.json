{
  "swagger": "2.0",
  "info": {
    "title": "Techbranch API",
    "version": "1.0",
    "contact": {
      "name": "Techbranch",
      "url": "https://github.com/loak155/techbranch-backend"
    }
  },
  "tags": [
    {
      "name": "ArticleService"
    },
    {
      "name": "AuthService"
    },
    {
      "name": "BookmarkService"
    },
    {
      "name": "CommentService"
    },
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/articles": {
      "get": {
        "summary": "Get articles",
        "description": "Use this API to get articles",
        "operationId": "ArticleService_ListArticles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListArticlesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ArticleService"
        ],
        "security": []
      },
      "post": {
        "summary": "Create new article",
        "description": "Use this API to create new article",
        "operationId": "ArticleService_CreateArticle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreateArticleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateArticleRequest"
            }
          }
        ],
        "tags": [
          "ArticleService"
        ]
      },
      "put": {
        "summary": "Update article",
        "description": "Use this API to update article",
        "operationId": "ArticleService_UpdateArticle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUpdateArticleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUpdateArticleRequest"
            }
          }
        ],
        "tags": [
          "ArticleService"
        ]
      }
    },
    "/v1/articles/{articleId}/bookmarks": {
      "get": {
        "summary": "Get bookmarks by article ID",
        "description": "Use this API to get bookmarks by article ID",
        "operationId": "BookmarkService_ListBookmarksByArticleID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListBookmarksByArticleIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "BookmarkService"
        ],
        "security": []
      },
      "delete": {
        "summary": "Delete bookmark by article ID",
        "description": "Use this API to delete bookmark by article ID",
        "operationId": "BookmarkService_DeleteBookmarkByArticleID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteBookmarkByArticleIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "BookmarkService"
        ]
      }
    },
    "/v1/articles/{articleId}/bookmarks/count": {
      "get": {
        "summary": "Get bookmark count by article ID",
        "description": "Use this API to get bookmark count by article ID",
        "operationId": "BookmarkService_GetBookmarkCountByArticleID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetBookmarkCountByArticleIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "BookmarkService"
        ],
        "security": []
      }
    },
    "/v1/articles/{articleId}/comments": {
      "get": {
        "summary": "Get comments by article ID",
        "description": "Use this API to get comments by article ID",
        "operationId": "CommentService_ListCommentsByArticleID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListCommentsByArticleIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CommentService"
        ],
        "security": []
      },
      "delete": {
        "summary": "Delete comment by article ID",
        "description": "Use this API to delete comment by article ID",
        "operationId": "CommentService_DeleteCommentByArticleID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteCommentByArticleIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/v1/articles/{id}": {
      "get": {
        "summary": "Get article",
        "description": "Use this API to get article",
        "operationId": "ArticleService_GetArticle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetArticleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ArticleService"
        ],
        "security": []
      },
      "delete": {
        "summary": "Delete article",
        "description": "Use this API to delete article",
        "operationId": "ArticleService_DeleteArticle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteArticleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ArticleService"
        ]
      }
    },
    "/v1/bookmarks": {
      "post": {
        "summary": "Create new bookmark",
        "description": "Use this API to create new bookmark",
        "operationId": "BookmarkService_CreateBookmark",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreateBookmarkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateBookmarkRequest"
            }
          }
        ],
        "tags": [
          "BookmarkService"
        ]
      }
    },
    "/v1/comments": {
      "post": {
        "summary": "Create new comment",
        "description": "Use this API to create new comment",
        "operationId": "CommentService_CreateComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreateCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateCommentRequest"
            }
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/v1/comments/{id}": {
      "delete": {
        "summary": "Delete comment",
        "description": "Use this API to delete comment",
        "operationId": "CommentService_DeleteComment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteCommentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/v1/oauth/google/callback": {
      "get": {
        "summary": "Get google login callback",
        "description": "Use this API to get google login callback",
        "operationId": "AuthService_GoogleLoginCallback",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGoogleLoginCallbackResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/v1/oauth/google/login": {
      "get": {
        "summary": "Get google login url",
        "description": "Use this API to get google login url",
        "operationId": "AuthService_GetGoogleLoginURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetGoogleLoginURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/v1/refresh-token": {
      "post": {
        "summary": "Refresh token",
        "description": "Use this API to refresh token",
        "operationId": "AuthService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "refreshToken",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/v1/signin": {
      "post": {
        "summary": "Signin",
        "description": "Use this API to signin",
        "operationId": "AuthService_Signin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSigninResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSigninRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/v1/signin/user": {
      "get": {
        "summary": "Get signin user",
        "description": "Use this API to signin user",
        "operationId": "AuthService_GetSigninUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetSigninUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/signout": {
      "post": {
        "summary": "Signout",
        "description": "Use this API to signout",
        "operationId": "AuthService_Signout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSignoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/signup": {
      "get": {
        "summary": "Signup",
        "description": "Use this API to signup",
        "operationId": "AuthService_Signup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSignupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      },
      "post": {
        "summary": "Pre signup",
        "description": "Use this API to pre signup",
        "operationId": "AuthService_PreSignup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoPreSignupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoPreSignupRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": []
      }
    },
    "/v1/users": {
      "get": {
        "summary": "Get users",
        "description": "Use this API to get users",
        "operationId": "UserService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "summary": "Create new user",
        "description": "Use this API to create new user",
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "put": {
        "summary": "Update user",
        "description": "Use this API to update user",
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users/{id}": {
      "get": {
        "summary": "Get user by id",
        "description": "Use this API to get user by id",
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "Delete user",
        "description": "Use this API to delete user",
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users/{userId}/articles/{articleId}/bookmarks": {
      "delete": {
        "summary": "Delete bookmark",
        "description": "Use this API to delete bookmark",
        "operationId": "BookmarkService_DeleteBookmarkByUserIDAndArticleID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteBookmarkByUserIDAndArticleIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "articleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "BookmarkService"
        ]
      }
    },
    "/v1/users/{userId}/articles/{articleId}/comments": {
      "delete": {
        "summary": "Delete comment by user ID and article ID",
        "description": "Use this API to delete comment by user ID and article ID",
        "operationId": "CommentService_DeleteCommentByUserIDAndArticleID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteCommentByUserIDAndArticleIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "articleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    },
    "/v1/users/{userId}/bookmarks": {
      "get": {
        "summary": "Get bookmarks by user ID",
        "description": "Use this API to get bookmarks by user ID",
        "operationId": "BookmarkService_ListBookmarksByUserID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListBookmarksByUserIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "BookmarkService"
        ]
      },
      "delete": {
        "summary": "Delete bookmark by user ID",
        "description": "Use this API to delete bookmark by user ID",
        "operationId": "BookmarkService_DeleteBookmarkByUserID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteBookmarkByUserIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "BookmarkService"
        ]
      }
    },
    "/v1/users/{userId}/comments": {
      "get": {
        "summary": "Get comments by user ID",
        "description": "Use this API to get comments by user ID",
        "operationId": "CommentService_ListCommentsByUserID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListCommentsByUserIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CommentService"
        ]
      },
      "delete": {
        "summary": "Delete comment by user ID",
        "description": "Use this API to delete comment by user ID",
        "operationId": "CommentService_DeleteCommentByUserID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteCommentByUserIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "CommentService"
        ]
      }
    }
  },
  "definitions": {
    "protoArticle": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protoBookmark": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "articleId": {
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protoComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "articleId": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protoCreateArticleRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "protoCreateArticleResponse": {
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/protoArticle"
        }
      }
    },
    "protoCreateBookmarkRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "articleId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protoCreateBookmarkResponse": {
      "type": "object",
      "properties": {
        "bookmark": {
          "$ref": "#/definitions/protoBookmark"
        }
      }
    },
    "protoCreateCommentRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "articleId": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "protoCreateCommentResponse": {
      "type": "object",
      "properties": {
        "comment": {
          "$ref": "#/definitions/protoComment"
        }
      }
    },
    "protoCreateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "protoCreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/protoUser"
        }
      }
    },
    "protoDeleteArticleResponse": {
      "type": "object"
    },
    "protoDeleteBookmarkByArticleIDResponse": {
      "type": "object"
    },
    "protoDeleteBookmarkByUserIDAndArticleIDResponse": {
      "type": "object"
    },
    "protoDeleteBookmarkByUserIDResponse": {
      "type": "object"
    },
    "protoDeleteCommentByArticleIDResponse": {
      "type": "object"
    },
    "protoDeleteCommentByUserIDAndArticleIDResponse": {
      "type": "object"
    },
    "protoDeleteCommentByUserIDResponse": {
      "type": "object"
    },
    "protoDeleteCommentResponse": {
      "type": "object"
    },
    "protoDeleteUserResponse": {
      "type": "object"
    },
    "protoGetArticleResponse": {
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/protoArticle"
        }
      }
    },
    "protoGetBookmarkCountByArticleIDResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protoGetGoogleLoginURLResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "protoGetSigninUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/protoUser"
        }
      }
    },
    "protoGetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/protoUser"
        }
      }
    },
    "protoGoogleLoginCallbackResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "protoListArticlesResponse": {
      "type": "object",
      "properties": {
        "articles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoArticle"
          }
        }
      }
    },
    "protoListBookmarksByArticleIDResponse": {
      "type": "object",
      "properties": {
        "bookmarks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoBookmark"
          }
        }
      }
    },
    "protoListBookmarksByUserIDResponse": {
      "type": "object",
      "properties": {
        "bookmarks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoBookmark"
          }
        }
      }
    },
    "protoListCommentsByArticleIDResponse": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoComment"
          }
        }
      }
    },
    "protoListCommentsByUserIDResponse": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoComment"
          }
        }
      }
    },
    "protoListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoUser"
          }
        }
      }
    },
    "protoPreSignupRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "protoPreSignupResponse": {
      "type": "object"
    },
    "protoRefreshTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        }
      }
    },
    "protoSigninRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "protoSigninResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "protoSignoutResponse": {
      "type": "object"
    },
    "protoSignupResponse": {
      "type": "object"
    },
    "protoUpdateArticleRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "protoUpdateArticleResponse": {
      "type": "object",
      "properties": {
        "article": {
          "$ref": "#/definitions/protoArticle"
        }
      }
    },
    "protoUpdateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "protoUpdateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/protoUser"
        }
      }
    },
    "protoUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
